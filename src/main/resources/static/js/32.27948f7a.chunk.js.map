{"version":3,"sources":["components/HeaderBreadcrumbs.js","components/CustomLoadingOverlay.js","../node_modules/@mui/icons-material/RemoveRedEye.js","pages/approval/KpiKraManagerRatingComponents/KpiKraManagerRatingList.js","pages/approval/KpiKraManagerRating.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","CustomLoadingOverlay","style","position","top","width","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","KpiKraManagerRatingList","rows","isLoading","_rowById","_x","i","id","dispatch","useDispatch","navigate","useNavigate","columns","field","headerName","editable","renderCell","params","IconButton","color","onClick","handleView","row","values","payload","usersKpiAndKra","username","name","employeeId","designation","setKpiKraList","PATH_DASHBOARD","timesheet","kpiKraUserRatingList","Page","title","Card","CardContent","height","rowsPerPageOptions","loading","components","LoadingOverlay","disableSelectionOnClick","KpiKraManagerRating","themeStretch","useSettings","useSelector","getkpiAndKraManagerList","React","useEffect","getAllKpiKraForTheManagerActionAsync","Container","maxWidth","general","root"],"mappings":"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","file":"static/js/32.27948f7a.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { GridOverlay } from '@mui/x-data-grid';\n\nexport default function CustomLoadingOverlay() {\n  return (\n    <GridOverlay>\n      <div style={{ position: 'absolute', top: 0, width: '100%' }}>\n        <LinearProgress />\n      </div>\n    </GridOverlay>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { useDispatch } from 'react-redux';\r\nimport Page from '../../../components/Page';\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\nimport CustomLoadingOverlay from '../../../components/CustomLoadingOverlay';\r\nimport { setKpiKraList } from '../../../redux/slices/kpiKraSlice';\r\n\r\nKpiKraManagerRatingList.propTypes = {\r\n  rows: PropTypes.array.isRequired,\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nexport default function KpiKraManagerRatingList({ rows, isLoading }) {\r\n  const title = 'KPI-KRA Manager Approval List';\r\n  const _rowById = rows.map((_x, i) => ({ ..._x, id: i + 1 }));\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const columns = [\r\n    {\r\n      field: '',\r\n      headerName: 'Detailed View',\r\n      width: 100,\r\n      editable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton color=\"primary\" aria-label=\"edit group\" onClick={() => handleView(params.row)}>\r\n            <RemoveRedEyeIcon />\r\n          </IconButton>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: 'Month & Year',\r\n      width: 150,\r\n      editable: false\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n      width: 150,\r\n      editable: false\r\n    },\r\n    {\r\n      field: 'employeeId',\r\n      headerName: 'Employee Id',\r\n      width: 150,\r\n      editable: false\r\n    },\r\n    {\r\n      field: 'designation',\r\n      headerName: 'User Designation',\r\n      width: 150,\r\n      editable: false\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 200,\r\n      editable: false\r\n    }\r\n  ];\r\n\r\n  const handleView = (values) => {\r\n    const payload = {\r\n      ...values.usersKpiAndKra,\r\n      username: values.name,\r\n      employeeId: values.employeeId,\r\n      designation: values.designation\r\n    };\r\n\r\n    dispatch(setKpiKraList(payload));\r\n    navigate(`${PATH_DASHBOARD.timesheet.kpiKraUserRatingList}/${payload.id}`);\r\n  };\r\n\r\n  return (\r\n    <Page title={title}>\r\n      <Card>\r\n        <CardContent>\r\n          <div style={{ height: 350, width: '100%' }}>\r\n            <div style={{ display: 'flex', height: '100%' }}>\r\n              <div style={{ flexGrow: 1 }}>\r\n                <DataGrid\r\n                  rows={_rowById}\r\n                  columns={columns}\r\n                  rowsPerPageOptions={[5, 25, 100]}\r\n                  loading={isLoading}\r\n                  components={{\r\n                    LoadingOverlay: CustomLoadingOverlay\r\n                  }}\r\n                  disableSelectionOnClick\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </Page>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport useSettings from '../../hooks/useSettings';\r\nimport Page from '../../components/Page';\r\nimport KpiKraManagerRatingList from './KpiKraManagerRatingComponents/KpiKraManagerRatingList';\r\nimport { getkpiAndKraManagerList, getAllKpiKraForTheManagerActionAsync } from '../../redux/slices/kpiKraSlice';\r\n\r\nexport default function KpiKraManagerRating() {\r\n  const { themeStretch } = useSettings();\r\n  const title = 'KPI-KRA Manager Rating';\r\n\r\n  const dispatch = useDispatch();\r\n  const rows = useSelector(getkpiAndKraManagerList);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllKpiKraForTheManagerActionAsync());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title={title}>\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={title}\r\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.general.root }, { name: 'KPI-KRA Manager Rating' }]}\r\n        />\r\n        <KpiKraManagerRatingList rows={rows} isLoading={false} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}