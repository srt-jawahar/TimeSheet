{"version":3,"sources":["components/HeaderBreadcrumbs.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/SimCardDownload.js","pages/timesheetreports/Reports.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","component","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","Reports","themeStretch","useSettings","title","useState","selectedReport","setReport","Date","date","setDate","isLoading","setLoading","selectedEmployee","setSelectedEmployee","console","log","dispatch","useDispatch","employees","useSelector","getAllUsersFromUser","role","localStorage","getItem","empId","reportsAdmin","id","report","api","parameter","method","reportsUser","handleChange","e","handleDownload","a","find","_x","formatteDate","format","isMonthYearAndUser","employeeId","methods","responseType","response","contentType","headers","blob","Blob","data","type","filename","split","fileSaver","isFormUser","useEffect","getAllUsersActionAsync","maxWidth","PATH_DASHBOARD","general","minHeight","direction","xs","sm","md","spacing","fullWidth","labelId","label","onChange","i","views","newValue","renderInput","params","disablePortal","autoHighlight","_event","options","isOptionEqualToValue","option","getOptionLabel","loading","endIcon","loadingIndicator","onClick","size","disabled"],"mappings":"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","file":"static/js/35.dc6eac04.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 2h-8L4 8v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 15-4-4h3V9.02L13 9v4h3l-4 4z\"\n}), 'SimCardDownload');\n\nexports.default = _default;","import React from 'react';\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  Stack,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField\r\n} from '@mui/material';\r\nimport { format } from 'date-fns';\r\nimport { DatePicker, LoadingButton } from '@mui/lab';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SimCardDownloadIcon from '@mui/icons-material/SimCardDownload';\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport useSettings from '../../hooks/useSettings';\r\nimport Page from '../../components/Page';\r\nimport api from '../../services/api';\r\nimport fileSaver from '../../utils/fileSaver';\r\nimport { getAllUsersActionAsync, getAllUsersFromUser } from '../../redux/slices/userSlice';\r\n\r\nexport default function Reports() {\r\n  const { themeStretch } = useSettings();\r\n  const title = 'Timesheet reports';\r\n  const [selectedReport, setReport] = React.useState('');\r\n  const [date, setDate] = React.useState(new Date());\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = React.useState('');\r\n  console.log('🚀 => selectedEmployee', selectedEmployee);\r\n  const dispatch = useDispatch();\r\n  const employees = useSelector(getAllUsersFromUser);\r\n  const role = localStorage.getItem('role');\r\n  const empId = localStorage.getItem('empId');\r\n\r\n  const reportsAdmin = [\r\n    {\r\n      id: 1,\r\n      report: 'Leave details for the month',\r\n      api: '/techstep/api/Timesheet/Service/report/leave/',\r\n      parameter: 'MonthYear',\r\n      method: 'getDataWithOptions'\r\n    },\r\n    {\r\n      id: 2,\r\n      report: 'All employee timsheet details for the month',\r\n      api: '/techstep/api/Timesheet/Service/report/timesheet/ALL/',\r\n      parameter: 'MonthYear',\r\n      method: 'getDataWithOptions'\r\n    },\r\n    {\r\n      id: 3,\r\n      report: 'Aggregated details of the employee',\r\n      api: '/techstep/api/Timesheet/Service/report/aggregate/',\r\n      parameter: 'MonthYear',\r\n      method: 'getDataWithOptions'\r\n    },\r\n    {\r\n      id: 4,\r\n      report: 'All employee detailed report',\r\n      api: '/techstep/api/Timesheet/Service/report/detailedtimesheet/ALL/',\r\n      parameter: 'MonthYear',\r\n      method: 'getDataWithOptions'\r\n    },\r\n    {\r\n      id: 5,\r\n      report: 'All KPI-KRA Details for the month',\r\n      api: '/techstep/api/UsersKpiAndKra/Service/KpiReportManager/',\r\n      parameter: 'MonthYear',\r\n      method: 'getDataWithOptions'\r\n    },\r\n    {\r\n      id: 6,\r\n      report: 'KPI - KRA Details for the month for an employee',\r\n      api: '/techstep/api/UsersKpiAndKra/Service/KpiReportForSingleUser/',\r\n      parameter: 'MonthYearAndUser',\r\n      method: 'getDataWithOptions'\r\n    }\r\n  ];\r\n\r\n  const reportsUser = [\r\n    {\r\n      id: 2,\r\n      report: 'Your timesheet details for the month',\r\n      api: `/techstep/api/Timesheet/Service/report/timesheet/${empId}/`,\r\n      parameter: 'MonthYear',\r\n      method: 'getDataWithOptions'\r\n    },\r\n    {\r\n      id: 4,\r\n      report: 'Your detailed timesheet',\r\n      api: `/techstep/api/Timesheet/Service/report/detailedtimesheet/${empId}/`,\r\n      parameter: 'MonthYear',\r\n      method: 'getDataWithOptions'\r\n    },\r\n    {\r\n      id: 6,\r\n      report: 'KPI - KRA Details for the month',\r\n      api: '/techstep/api/UsersKpiAndKra/Service/KpiReportForSingleUser/',\r\n      parameter: 'MonthYearIndividualUser',\r\n      method: 'getDataWithOptions'\r\n    }\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    setReport(e.target.value);\r\n  };\r\n\r\n  const handleDownload = async () => {\r\n    setLoading(true);\r\n    const report =\r\n      role === 'ROLE_ADMIN' || role === 'ROLE_MANAGER'\r\n        ? reportsAdmin.find((_x) => _x.id === +selectedReport)\r\n        : reportsUser.find((_x) => _x.id === +selectedReport);\r\n    const formatteDate = format(date, 'MM/yyyy');\r\n    const isMonthYearAndUser =\r\n      // eslint-disable-next-line no-nested-ternary\r\n      report.parameter === 'MonthYearAndUser'\r\n        ? `${report.api + formatteDate}/${selectedEmployee.employeeId}`\r\n        : report.parameter === 'MonthYearIndividualUser'\r\n        ? `${report.api + formatteDate}/${empId}`\r\n        : report.api + formatteDate;\r\n    const response = await api.methods[report.method](isMonthYearAndUser, {\r\n      responseType: 'blob' // **don't forget to add this**\r\n    });\r\n\r\n    const contentType = response.headers['content-type'];\r\n    const blob = new Blob([response.data], {\r\n      type: contentType\r\n    });\r\n    const filename = response.headers['content-disposition'].split('filename=')[1];\r\n    fileSaver(blob, filename);\r\n    setLoading(false);\r\n  };\r\n\r\n  const isFormUser =\r\n    role === 'ROLE_ADMIN' || role === 'ROLE_MANAGER'\r\n      ? reportsAdmin.find((_x) => _x.id === +selectedReport)\r\n      : reportsUser.find((_x) => _x.id === +selectedReport);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllUsersActionAsync());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Page title={title}>\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={title}\r\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.general.root }, { name: 'Timesheet reports' }]}\r\n        />\r\n        <Card>\r\n          <CardContent sx={{ minHeight: 300 }}>\r\n            <Stack direction={{ xs: 'column', sm: 'column', md: 'row' }} spacing={{ xs: 1, sm: 2, md: 4 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"available-reports-id\">Available reports</InputLabel>\r\n                {role === 'ROLE_ADMIN' || role === 'ROLE_MANAGER' ? (\r\n                  <Select\r\n                    variant=\"standard\"\r\n                    labelId=\"available-reports-id\"\r\n                    id=\"available-reports-select\"\r\n                    value={selectedReport}\r\n                    label=\"Available reports\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {reportsAdmin.map((_x, i) => (\r\n                      <MenuItem key={i} value={_x.id}>\r\n                        {_x.report}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                ) : (\r\n                  <Select\r\n                    variant=\"standard\"\r\n                    labelId=\"available-reports-id\"\r\n                    id=\"available-reports-select\"\r\n                    value={selectedReport}\r\n                    label=\"Available reports\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {reportsUser.map((_x, i) => (\r\n                      <MenuItem key={i} value={_x.id}>\r\n                        {_x.report}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </FormControl>\r\n              {isFormUser && isFormUser.parameter === 'MonthYear' && (\r\n                <DatePicker\r\n                  views={['month', 'year']}\r\n                  label=\"Month and Year\"\r\n                  value={date}\r\n                  onChange={(newValue) => setDate(newValue)}\r\n                  renderInput={(params) => <TextField variant=\"standard\" {...params} />}\r\n                />\r\n              )}\r\n              {isFormUser && isFormUser.parameter === 'MonthYearAndUser' && (\r\n                <>\r\n                  <DatePicker\r\n                    views={['month', 'year']}\r\n                    label=\"Month and Year\"\r\n                    value={date}\r\n                    onChange={(newValue) => setDate(newValue)}\r\n                    renderInput={(params) => <TextField fullWidth variant=\"standard\" {...params} />}\r\n                  />\r\n                  <Autocomplete\r\n                    disablePortal\r\n                    autoHighlight\r\n                    id=\"employeeId-id\"\r\n                    value={selectedEmployee}\r\n                    onChange={(_event, newValue) => {\r\n                      if (newValue) {\r\n                        console.log('🚀 => newValue', newValue);\r\n                        setSelectedEmployee(newValue);\r\n                      }\r\n                    }}\r\n                    fullWidth\r\n                    options={employees}\r\n                    isOptionEqualToValue={(option, value) => option.id === value.id}\r\n                    getOptionLabel={(option) => option.name || ''}\r\n                    renderInput={(params) => <TextField variant=\"standard\" {...params} label=\"User\" />}\r\n                  />\r\n                </>\r\n              )}\r\n            </Stack>\r\n            <Stack sx={{ mt: 1 }}>\r\n              <LoadingButton\r\n                loading={isLoading}\r\n                endIcon={<SimCardDownloadIcon />}\r\n                loadingIndicator=\"Downloading...\"\r\n                variant=\"contained\"\r\n                onClick={handleDownload}\r\n                size=\"small\"\r\n                disabled={selectedReport === ''}\r\n              >\r\n                Download\r\n              </LoadingButton>\r\n            </Stack>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}