{"version":3,"sources":["components/HeaderBreadcrumbs.js","components/SearchNotFound.js","pages/approval/ApprovalListToolbar.js","pages/approval/TimesheetApproval.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","SearchNotFound","searchQuery","align","RootStyle","styled","Toolbar","height","justifyContent","padding","theme","spacing","SearchStyle","OutlinedInput","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","ApprovalListToolbar","numSelected","filterName","onFilterName","handleBulkApproval","handleDelete","isLight","useTheme","mode","color","bgcolor","Typography","component","value","onChange","placeholder","startAdornment","InputAdornment","position","Box","Icon","icon","searchFill","Chip","label","onDelete","Stack","direction","Tooltip","title","IconButton","onClick","baseThumbUp","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","order","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","property","event","visuallyHidden","TimesheetApproval","React","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rows","useSelector","getApprovalListFromTSAppr","useSnackbar","enqueueSnackbar","closeSnackbar","dispatch","useDispatch","navigate","useNavigate","themeStretch","useSettings","filter","getFilterTimesheetAppr","isLoading","getIsLoadingFromTSAppr","handleEdit","row","getTaskDetailsAsync","then","key","size","closeFill","PATH_DASHBOARD","timesheet","approvalList","catch","err","emptyRows","Math","max","length","filteredUsers","array","comparator","query","stabilizedThis","el","index","sort","_user","projects","toLowerCase","indexOf","applySortFilter","getComparator","isUserNotFound","getTimeSheetApprovalAsync","Page","Container","maxWidth","name","root","Card","setFilterAppr","payload","postBulkApproveDetailsAsync","_x","Scrollbar","LinearProgress","TableContainer","Table","minWidth","newSelecteds","slice","n","TableBody","isItemSelected","labelId","hover","role","tabIndex","selectedIndex","newSelected","concat","handleClick","empId","date","substr","status","Button","colSpan","py","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/38.13766065.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { Paper, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  );\n}\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport Stack from '@mui/material/Stack';\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\nimport baseThumbUp from '@iconify/icons-ic/baseline-thumb-up';\r\n// material\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Box, Toolbar, Tooltip, IconButton, Typography, OutlinedInput, InputAdornment, Chip } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: 96,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 240,\r\n  transition: theme.transitions.create(['box-shadow', 'width'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nApprovalListToolbar.propTypes = {\r\n  numSelected: PropTypes.number,\r\n  filterName: PropTypes.string,\r\n  onFilterName: PropTypes.func,\r\n  handleBulkApproval: PropTypes.func,\r\n  handleDelete: PropTypes.func\r\n};\r\n\r\nexport default function ApprovalListToolbar({\r\n  numSelected,\r\n  filterName,\r\n  onFilterName,\r\n  handleBulkApproval,\r\n  handleDelete\r\n}) {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(numSelected > 0 && {\r\n          color: isLight ? 'primary.main' : 'text.primary',\r\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography component=\"div\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <SearchStyle\r\n            value={filterName}\r\n            onChange={onFilterName}\r\n            placeholder=\"Search using user and project...\"\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {filterName && <Chip label={filterName} onDelete={handleDelete} />}\r\n        </>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Tooltip title=\"Approve\">\r\n            <IconButton onClick={handleBulkApproval}>\r\n              <Icon icon={baseThumbUp} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n      ) : null}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { filter } from 'lodash';\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Icon } from '@iconify/react';\r\nimport {\r\n  Card,\r\n  Button,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Container,\r\n  Checkbox,\r\n  Tooltip,\r\n  IconButton,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport { useSnackbar } from 'notistack';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport {\r\n  getApprovalListFromTSAppr,\r\n  getFilterTimesheetAppr,\r\n  getTaskDetailsAsync,\r\n  getTimeSheetApprovalAsync,\r\n  postBulkApproveDetailsAsync,\r\n  setFilterAppr,\r\n  getIsLoadingFromTSAppr\r\n} from '../../redux/slices/timesheetApprovalSlice';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\nimport useSettings from '../../hooks/useSettings';\r\nimport Page from '../../components/Page';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport SearchNotFound from '../../components/SearchNotFound';\r\nimport ApprovalListToolbar from './ApprovalListToolbar';\r\nimport { MIconButton } from '../../components/@material-extend';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.projects.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'empno',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Emp No'\r\n  },\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Name'\r\n  },\r\n  {\r\n    id: 'date',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Date'\r\n  },\r\n  {\r\n    id: 'status',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Status'\r\n  },\r\n  {\r\n    id: 'action',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Action'\r\n  }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all list'\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align=\"center\"\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : null}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nexport default function TimesheetApproval() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('id');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const rows = useSelector(getApprovalListFromTSAppr);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const title = 'Approval List';\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { themeStretch } = useSettings();\r\n  const filter = useSelector(getFilterTimesheetAppr);\r\n  const isLoading = useSelector(getIsLoadingFromTSAppr);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    // setFilterName(event.target.value);\r\n    setPage(0);\r\n    dispatch(setFilterAppr(event.target.value));\r\n  };\r\n\r\n  const handleClearFilter = () => {\r\n    setPage(0);\r\n    dispatch(setFilterAppr(''));\r\n  };\r\n\r\n  const handleEdit = async (row) => {\r\n    await dispatch(getTaskDetailsAsync(row))\r\n      .then(() => {\r\n        enqueueSnackbar('Showing Task Details', {\r\n          variant: 'success',\r\n          action: (key) => (\r\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} />\r\n            </MIconButton>\r\n          )\r\n        });\r\n        navigate(PATH_DASHBOARD.timesheet.approvalList);\r\n      })\r\n      .catch((err) => {\r\n        enqueueSnackbar(err, {\r\n          variant: 'error',\r\n          action: (key) => (\r\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} />\r\n            </MIconButton>\r\n          )\r\n        });\r\n      });\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(rows, getComparator(order, orderBy), filter);\r\n\r\n  const isUserNotFound = filteredUsers.length === 0;\r\n\r\n  const handleBulkApproval = () => {\r\n    const payload = [...selected];\r\n\r\n    dispatch(postBulkApproveDetailsAsync(payload.map((_x) => ({ id: _x }))))\r\n      .then(() => {\r\n        enqueueSnackbar('Approved Successfully', {\r\n          variant: 'success',\r\n          action: (key) => (\r\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} />\r\n            </MIconButton>\r\n          )\r\n        });\r\n        dispatch(getTimeSheetApprovalAsync());\r\n        setSelected([]);\r\n      })\r\n      .catch((err) => {\r\n        enqueueSnackbar(err, {\r\n          variant: 'error',\r\n          action: (key) => (\r\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} />\r\n            </MIconButton>\r\n          )\r\n        });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getTimeSheetApprovalAsync());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title={title}>\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={title}\r\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Approval List' }]}\r\n        />\r\n\r\n        <Card>\r\n          <ApprovalListToolbar\r\n            numSelected={selected.length}\r\n            filterName={filter}\r\n            onFilterName={handleFilterByName}\r\n            handleBulkApproval={handleBulkApproval}\r\n            handleDelete={handleClearFilter}\r\n          />\r\n          <Scrollbar>\r\n            {isLoading && <LinearProgress />}\r\n            <TableContainer>\r\n              <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\" size=\"small\">\r\n                <EnhancedTableHead\r\n                  numSelected={selected.length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                  onRequestSort={handleRequestSort}\r\n                  rowCount={rows.length}\r\n                />\r\n                <TableBody>\r\n                  {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    const isItemSelected = isSelected(row.id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.id}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            color=\"primary\"\r\n                            onClick={(event) => handleClick(event, row.id)}\r\n                            checked={isItemSelected}\r\n                            inputProps={{\r\n                              'aria-labelledby': labelId\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{row.empId}</TableCell>\r\n                        <TableCell align=\"center\">{row.name}</TableCell>\r\n                        <TableCell align=\"center\">{row.date.substr(0, 10)}</TableCell>\r\n                        <TableCell align=\"center\">{row.status}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Button onClick={() => handleEdit(row)}>{row.id}</Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                {isUserNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <SearchNotFound searchQuery={filter} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              />\r\n            </TableContainer>\r\n          </Scrollbar>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}