{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/approval/KpiKraManagerRatingComponents/KpiKraUserRatingList.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","TABLE_HEAD","id","label","alignRight","KpiKraUserRatingList","themeStretch","useSettings","title","kpiKraInDetail","useSelector","getkpiKraManagerRating","isLoading","getIsLoadingFromKpi","useSnackbar","enqueueSnackbar","closeSnackbar","navigate","useNavigate","rows","kpiList","dispatch","useDispatch","sumKpi","length","o","rating","reduce","a","c","Number","sumKpiUser","selfrating","sumKpiManager","managerRating","maxWidth","name","PATH_DASHBOARD","general","root","timesheet","kpiKraManagerRating","m","p","direction","xs","sm","spacing","md","views","value","date","disabled","renderInput","params","helperText","employeeId","onChange","e","preventDefault","username","designation","minWidth","style","whiteSpace","headCell","align","row","i","kpi","description","hover","tabIndex","fullWidth","displayEmpty","size","event","payload","setManagerRating","handleChange","Array","from","_","_x","colSpan","disableSpacing","width","justifyContent","component","Paper","status","color","onClick","submitKpiKraManagerRatingActionAsync","then","key","icon","closeFill"],"mappings":"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","file":"static/js/43.9f9dca48.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Stack,\r\n  Paper,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  TextField,\r\n  Chip,\r\n  TableFooter\r\n} from '@mui/material';\r\nimport { Icon } from '@iconify/react';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport { useSnackbar } from 'notistack';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\r\nimport useSettings from '../../../hooks/useSettings';\r\nimport Page from '../../../components/Page';\r\nimport Scrollbar from '../../../components/Scrollbar';\r\nimport {\r\n  getkpiKraManagerRating,\r\n  setManagerRating,\r\n  getIsLoadingFromKpi,\r\n  submitKpiKraManagerRatingActionAsync\r\n} from '../../../redux/slices/kpiKraSlice';\r\nimport { MIconButton } from '../../../components/@material-extend';\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'kpi-name', label: 'KPI', alignRight: false },\r\n  { id: 'kpi-description', label: 'Description', alignRight: false },\r\n  { id: 'kpi-rating', label: 'Rating', alignRight: false },\r\n  { id: 'selfrating', label: 'Self Rating', alignRight: false },\r\n  { id: 'managerRating', label: 'Manager Rating', alignRight: false }\r\n];\r\n\r\nexport default function KpiKraUserRatingList() {\r\n  const { themeStretch } = useSettings();\r\n  const title = 'KPI-KRA Manager Rating';\r\n  const kpiKraInDetail = useSelector(getkpiKraManagerRating);\r\n  const isLoading = useSelector(getIsLoadingFromKpi);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const navigate = useNavigate();\r\n\r\n  const rows = kpiKraInDetail.kpiList;\r\n  const dispatch = useDispatch();\r\n\r\n  const sumKpi = rows.length === 0 ? 0 : rows.map((o) => o.rating).reduce((a, c) => Number(a) + Number(c));\r\n  const sumKpiUser = rows.length === 0 ? 0 : rows.map((o) => o.selfrating).reduce((a, c) => Number(a) + Number(c));\r\n  const sumKpiManager =\r\n    rows.length === 0 ? 0 : rows.map((o) => o.managerRating).reduce((a, c) => Number(a) + Number(c));\r\n\r\n  const handleChange = (row, event) => {\r\n    const payload = {\r\n      row,\r\n      value: event.target.value\r\n    };\r\n    dispatch(setManagerRating(payload));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(submitKpiKraManagerRatingActionAsync('approve')).then(() => {\r\n      enqueueSnackbar('Updated the rating', {\r\n        variant: 'success',\r\n        action: (key) => (\r\n          <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n            <Icon icon={closeFill} />\r\n          </MIconButton>\r\n        )\r\n      });\r\n      navigate(PATH_DASHBOARD.timesheet.kpiKraManagerRating);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Page title={title}>\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={title}\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.general.root },\r\n            { name: 'KPI-KRA Manager Rating', href: PATH_DASHBOARD.timesheet.kpiKraManagerRating },\r\n            { name: 'Kpi-kra' }\r\n          ]}\r\n        />\r\n        <Card>\r\n          <Box m={2} p={1}>\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 1, sm: 2, md: 2 }}>\r\n              <DatePicker\r\n                views={['year', 'month']}\r\n                label=\"Year and Month\"\r\n                value={kpiKraInDetail.date}\r\n                disabled\r\n                renderInput={(params) => <TextField {...params} helperText={null} />}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"EmployeeId\"\r\n                variant=\"outlined\"\r\n                disabled\r\n                value={kpiKraInDetail.employeeId}\r\n                onChange={(e) => e.preventDefault()}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                disabled\r\n                value={kpiKraInDetail.username}\r\n                onChange={(e) => e.preventDefault()}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Designation\"\r\n                variant=\"outlined\"\r\n                disabled\r\n                value={kpiKraInDetail.designation}\r\n                onChange={(e) => e.preventDefault()}\r\n              />\r\n            </Stack>\r\n          </Box>\r\n          <CardContent>\r\n            <Scrollbar>\r\n              <TableContainer sx={{ minWidth: 800 }}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow style={{ whiteSpace: 'nowrap' }}>\r\n                      {TABLE_HEAD.map((headCell) => (\r\n                        <TableCell key={headCell.id} align={headCell.alignRight ? 'right' : 'left'}>\r\n                          {headCell.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {rows.map((row, i) => {\r\n                      const { kpi, description, rating, selfrating, managerRating } = row;\r\n\r\n                      return (\r\n                        <TableRow hover key={i} tabIndex={-1}>\r\n                          <TableCell align=\"left\">{kpi}</TableCell>\r\n                          <TableCell align=\"left\">{description}</TableCell>\r\n                          <TableCell align=\"right\">{rating}</TableCell>\r\n                          <TableCell align=\"right\">{selfrating}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <FormControl fullWidth>\r\n                              <Select\r\n                                displayEmpty\r\n                                size=\"small\"\r\n                                value={managerRating}\r\n                                onChange={(e) => handleChange(row, e)}\r\n                              >\r\n                                <MenuItem value=\"0\">\r\n                                  <em>None</em>\r\n                                </MenuItem>\r\n                                {[...Array.from({ length: +rating }, (_, i) => i + 1)].map((_x, i) => (\r\n                                  <MenuItem key={i} value={_x}>\r\n                                    {_x}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </FormControl>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TableCell colSpan={1} />\r\n                      <TableCell align=\"center\">Total </TableCell>\r\n                      <TableCell align=\"right\">{sumKpi}</TableCell>\r\n                      <TableCell align=\"right\">{sumKpiUser}</TableCell>\r\n                      <TableCell align=\"right\">{sumKpiManager}</TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                      <TableCell colSpan={1} />\r\n                      <TableCell align=\"center\">KPI - (100/10) </TableCell>\r\n                      <TableCell align=\"right\">{sumKpi / 10}</TableCell>\r\n                      <TableCell align=\"right\">{sumKpiUser / 10}</TableCell>\r\n                      <TableCell align=\"right\">{sumKpiManager / 10}</TableCell>\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </TableContainer>\r\n            </Scrollbar>\r\n          </CardContent>\r\n          <CardActions disableSpacing>\r\n            <Stack\r\n              style={{ width: '100em' }}\r\n              direction=\"row\"\r\n              spacing={2}\r\n              alignItems=\"center\"\r\n              justifyContent=\"flex-end\"\r\n              component={Paper}\r\n            >\r\n              {kpiKraInDetail.status === 'APPROVED' ? (\r\n                <Chip label=\"Already approved\" color=\"success\" />\r\n              ) : (\r\n                <Button size=\"small\" variant=\"contained\" onClick={handleSubmit} disabled={isLoading}>\r\n                  Submit\r\n                </Button>\r\n              )}\r\n            </Stack>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}