{"version":3,"sources":["pages/ResetPasswordPage/ChangePassword.js"],"names":["RootStyle","styled","Page","display","minHeight","alignItems","justifyContent","padding","theme","spacing","useStyles","makeStyles","paper","marginTop","flexDirection","avatar","margin","backgroundColor","palette","secondary","light","form","width","submit","ChangePassword","classes","useSnackbar","enqueueSnackbar","closeSnackbar","dispatch","useDispatch","navigate","useNavigate","initialValues","password","confirmpassword","PasswordSchema","Yup","shape","min","required","oneOf","formik","useFormik","onSubmit","values","actions","a","payload","updatePasswordAction","then","variant","action","key","size","onClick","icon","closeFill","PATH_DASHBOARD","general","root","catch","err","resetForm","validationSchema","title","component","maxWidth","className","value","autoComplete","noValidate","handleSubmit","fullWidth","id","label","name","autoFocus","getFieldProps","error","Boolean","touched","errors","helperText","type","color"],"mappings":"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","file":"static/js/49.f3827ee7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, CssBaseline, TextField, Typography, Container } from '@mui/material';\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport { Icon } from '@iconify/react';\r\nimport { useDispatch } from 'react-redux';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlinedIcon';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { styled, makeStyles } from '@mui/styles';\r\n// import LogoOnlyLayout from 'src/layouts/LogoOnlyLayout';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n// eslint-disable-next-line import/no-unresolved\r\n// import { makeStyles } from '@mui/styles';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { updatePasswordAction } from 'src/redux/slices/resetpasswordSlice';\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\nimport Page from '../../components/Page';\r\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\r\nimport { MIconButton } from '../../components/@material-extend';\r\n\r\n// import { confirmPassword } from '~/redux/actions/authenticationAction';\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  display: 'flex',\r\n  minHeight: '100%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(8, 0)\r\n  // backgroundColor: theme.palette.secondary.lighter\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.light\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function ChangePassword() {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    password: '',\r\n    confirmpassword: ''\r\n  };\r\n\r\n  const PasswordSchema = Yup.object().shape({\r\n    password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required'),\r\n    confirmpassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit: async (values, actions) => {\r\n      const payload = {\r\n        password: values.password\r\n      };\r\n      dispatch(updatePasswordAction(payload))\r\n        .then(() => {\r\n          enqueueSnackbar('Password changed successfully', {\r\n            variant: 'success',\r\n            action: (key) => (\r\n              <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n                <Icon icon={closeFill} />\r\n              </MIconButton>\r\n            )\r\n          });\r\n          navigate(PATH_DASHBOARD.general.root);\r\n        })\r\n        .catch((err) => {\r\n          enqueueSnackbar(err, {\r\n            variant: 'error',\r\n            action: (key) => (\r\n              <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n                <Icon icon={closeFill} />\r\n              </MIconButton>\r\n            )\r\n          });\r\n        });\r\n\r\n      actions.resetForm({\r\n        values: initialValues\r\n      });\r\n    },\r\n    validationSchema: PasswordSchema\r\n  });\r\n\r\n  return (\r\n    <RootStyle title=\"Change Password | TechStepHub\">\r\n      <LogoOnlyLayout />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Change Password\r\n          </Typography>\r\n          <FormikProvider value={formik}>\r\n            <Form autoComplete=\"off\" noValidate onSubmit={formik.handleSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                autoFocus\r\n                {...formik.getFieldProps('password')}\r\n                error={Boolean(formik.touched.password && formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmpassword\"\r\n                label=\"Confirm Password\"\r\n                id=\"confirmpassword\"\r\n                {...formik.getFieldProps('confirmpassword')}\r\n                error={Boolean(formik.touched.confirmpassword && formik.errors.confirmpassword)}\r\n                helperText={formik.touched.confirmpassword && formik.errors.confirmpassword}\r\n              />\r\n              <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                Change Password\r\n              </Button>\r\n            </Form>\r\n          </FormikProvider>\r\n        </div>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}