{"version":3,"sources":["pages/assetmanagement/AssetCapture/AssetCapture.js"],"names":["AssetCapture","dispatch","useDispatch","navigate","useNavigate","enqueueSnackbar","useSnackbar","authDetails","useSelector","getUserDetailsFromAuth","isLoading","getIsLoadingFromAuth","isAssetDataCaptured","getIsAssetDataCaptured","error","getErrorFromAuth","getAssetRefObjState","antiVirusList","assetTypeList","emailList","makeList","osList","outlookVersionList","ramList","storageList","themeStretch","useSettings","React","useState","focusr_laptop","make","model","asset_type","previously_used_by","laptop_serial_no","battery_serial_no","os_version","windows_product_id","ram","storage","anti_virus_enabled","anti_virus_type","email_configuration","outlook_version","date_of_asset_receipt","charger_working","other_software_installed","remarks","value","setValue","handleChange","e","target","name","handleSubmit","console","log","captureAssetDetailsAction","variant","useEffect","PATH_DASHBOARD","general","root","title","maxWidth","sx","m","avatar","action","p","pt","onClick","disabled","color","PATH_AUTH","login","replace","logoutAction","severity","divider","spacing","padding","noWrap","direction","justifyContent","row","onChange","control","label","select","fullWidth","size","map","option","placeholder","newValue","date","renderInput","params","id","multiline","rows"],"mappings":"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","file":"static/js/50.28c0745f.chunk.js","sourcesContent":["import { DatePicker } from '@mui/lab';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Stack,\n  TextField,\n  Typography\n} from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport Logo from '../../../components/Logo';\nimport Page from '../../../components/Page';\nimport useSettings from '../../../hooks/useSettings';\nimport {\n  captureAssetDetailsAction,\n  getAssetRefObjState,\n  getErrorFromAuth,\n  getIsAssetDataCaptured,\n  getIsLoadingFromAuth,\n  getUserDetailsFromAuth,\n  logoutAction\n} from '../../../redux/slices/authSlice';\nimport { PATH_AUTH, PATH_DASHBOARD } from '../../../routes/paths';\n\nexport default function AssetCapture() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const authDetails = useSelector(getUserDetailsFromAuth);\n  const isLoading = useSelector(getIsLoadingFromAuth);\n  const isAssetDataCaptured = useSelector(getIsAssetDataCaptured);\n  const error = useSelector(getErrorFromAuth);\n  const { antiVirusList, assetTypeList, emailList, makeList, osList, outlookVersionList, ramList, storageList } =\n    useSelector(getAssetRefObjState);\n  const { themeStretch } = useSettings();\n  const title = 'Asset Details Form';\n\n  const [value, setValue] = React.useState({\n    focusr_laptop: '',\n    make: '',\n    model: '',\n    asset_type: '',\n    previously_used_by: '',\n    laptop_serial_no: '',\n    battery_serial_no: '',\n    os_version: '',\n    windows_product_id: '',\n    ram: '',\n    storage: '',\n    anti_virus_enabled: '',\n    anti_virus_type: '',\n    email_configuration: '',\n    outlook_version: '',\n    date_of_asset_receipt: '',\n    charger_working: '',\n    other_software_installed: '',\n    remarks: 'Nil'\n  });\n\n  const handleChange = (e) => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleDateChange = (date) => {\n    setValue({\n      ...value,\n      date_of_asset_receipt: date\n    });\n  };\n\n  const handleLogout = () => {\n    navigate(PATH_AUTH.login, { replace: true });\n    dispatch(logoutAction());\n  };\n\n  const handleSubmit = () => {\n    console.log(value);\n\n    if (value.focusr_laptop === 'Y') {\n      if (\n        value.focusr_laptop &&\n        value.make &&\n        value.model &&\n        value.asset_type &&\n        value.previously_used_by &&\n        value.laptop_serial_no &&\n        value.battery_serial_no &&\n        value.os_version &&\n        value.windows_product_id &&\n        value.ram &&\n        value.storage &&\n        value.anti_virus_enabled &&\n        value.anti_virus_type &&\n        value.email_configuration &&\n        value.outlook_version &&\n        value.date_of_asset_receipt &&\n        value.charger_working &&\n        value.other_software_installed &&\n        value.remarks\n      ) {\n        dispatch(captureAssetDetailsAction(value));\n      } else {\n        enqueueSnackbar('Invalid Form. Fill all the details properly.', {\n          variant: 'error'\n        });\n      }\n    } else {\n      dispatch(captureAssetDetailsAction({ focusr_laptop: 'N' }));\n    }\n  };\n\n  React.useEffect(() => {\n    if (isAssetDataCaptured) {\n      enqueueSnackbar('Asset details captured successfully', {\n        variant: 'success'\n      });\n      navigate(PATH_DASHBOARD.general.root);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAssetDataCaptured]);\n\n  React.useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: 'error'\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  return (\n    <Page title={title}>\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <Card sx={{ m: 2 }}>\n          <CardHeader\n            title=\"Asset details form\"\n            avatar={<Logo />}\n            action={\n              <Box sx={{ p: 2, pt: 1.5 }}>\n                <Button variant=\"contained\" onClick={handleSubmit} disabled={isLoading || value.focusr_laptop === ''}>\n                  {isLoading ? 'Submitting' : 'Submit'}\n                </Button>{' '}\n                <Button color=\"inherit\" variant=\"outlined\" onClick={handleLogout} disabled={isLoading}>\n                  Logout\n                </Button>\n              </Box>\n            }\n          />\n\n          <CardContent>\n            <Alert severity=\"info\">\n              Welcome {authDetails && authDetails.name} . Please take some time to fill the below details.\n            </Alert>\n            <Stack divider={<Divider />} spacing={2} padding={2}>\n              <Stack>\n                <Stack>\n                  <Typography variant=\"subtitle1\" noWrap>\n                    1. Whether you have FocusR provided laptop ?\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                    Eg. Yes or No\n                  </Typography>\n                </Stack>\n                <Stack direction=\"row\" justifyContent=\"flex-start\">\n                  <FormControl>\n                    <RadioGroup row name=\"focusr_laptop\" value={value.focusr_laptop} onChange={handleChange}>\n                      <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\n                      <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                  </FormControl>\n                </Stack>\n              </Stack>\n\n              {value.focusr_laptop === 'Y' && (\n                <>\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        2. Choose any one brand from the list.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. HP/ Lenova/ Dell/ Toshiba or Others\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField select fullWidth size=\"small\" name=\"make\" value={value.make} onChange={handleChange}>\n                        <MenuItem value=\"\">Select</MenuItem>\n                        {makeList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        3. Enter the Laptop Model Name/Number.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. HP 348 G7\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder=\"Enter\"\n                        name=\"model\"\n                        value={value.model}\n                        onChange={handleChange}\n                      />\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        4. Choose from the options which describes about your laptop.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. New one / Used one / Others\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        select\n                        fullWidth\n                        size=\"small\"\n                        name=\"asset_type\"\n                        value={value.asset_type}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"\">Select</MenuItem>\n                        {assetTypeList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        5. Enter the serial number of your Laptop.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. 5CG125XXXF7\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder=\"Enter\"\n                        name=\"laptop_serial_no\"\n                        value={value.laptop_serial_no}\n                        onChange={handleChange}\n                      />\n                    </Stack>\n                  </Stack>\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        5. Enter the name of previously used user.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. If it is a new laptop then type New orelse reach HR and fill the details\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder=\"Enter\"\n                        name=\"previously_used_by\"\n                        value={value.previously_used_by}\n                        onChange={handleChange}\n                      />\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        6. Enter the batery serial number of your Laptop.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. 07220 04/23/20XX\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder=\"Enter\"\n                        name=\"battery_serial_no\"\n                        value={value.battery_serial_no}\n                        onChange={handleChange}\n                      />\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        7. Choose the OS version of your laptop\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. Windows 8.1, 10, 11\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        select\n                        fullWidth\n                        size=\"small\"\n                        name=\"os_version\"\n                        value={value.os_version}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"\">Select</MenuItem>\n                        {osList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        8. Choose the RAM of your laptop\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. 8/ 16/ 32 GB\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField select fullWidth size=\"small\" name=\"ram\" value={value.ram} onChange={handleChange}>\n                        <MenuItem value=\"\">Select</MenuItem>\n                        {ramList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        9. Choose the storage space of your laptop\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. 1 TB/ 512 GB/ 256 GB\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        select\n                        fullWidth\n                        size=\"small\"\n                        name=\"storage\"\n                        value={value.storage}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"\">Select</MenuItem>\n                        {storageList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        10. Any Antivirus software enabled ?\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. Active / Inactive antivirus\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <FormControl>\n                        <RadioGroup\n                          row\n                          name=\"anti_virus_enabled\"\n                          value={value.anti_virus_enabled}\n                          onChange={handleChange}\n                        >\n                          <FormControlLabel value=\"Y\" control={<Radio />} label=\"Active\" />\n                          <FormControlLabel value=\"N\" control={<Radio />} label=\"Inactive\" />\n                        </RadioGroup>\n                      </FormControl>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        11. If Active, Choose the antivirus type from the list.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. Windows Defender/ Bitdefender or Others\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        select\n                        fullWidth\n                        size=\"small\"\n                        name=\"anti_virus_type\"\n                        value={value.anti_virus_type}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"\">Select</MenuItem>\n                        {antiVirusList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        12. Choose the Email Configuration from the list.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. Outlook/ Tunderbird\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        select\n                        fullWidth\n                        size=\"small\"\n                        name=\"email_configuration\"\n                        value={value.email_configuration}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"\">Select</MenuItem>\n                        {emailList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        13. Enter the verion details of your email confguration\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. 2007/2008/2009/2010 or Others\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        select\n                        fullWidth\n                        size=\"small\"\n                        name=\"outlook_version\"\n                        value={value.outlook_version}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"\">Select</MenuItem>\n                        {outlookVersionList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        14. Whether battery health is good ?\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. Yes / No\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <FormControl>\n                        <RadioGroup row name=\"charger_working\" value={value.charger_working} onChange={handleChange}>\n                          <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\n                          <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\n                        </RadioGroup>\n                      </FormControl>\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        14. Date of asset receipt.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. Enter the date when you received your laptop from FocusR\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <DatePicker\n                        value={value.date_of_asset_receipt}\n                        onChange={(newValue) => {\n                          handleDateChange(newValue);\n                        }}\n                        renderInput={(params) => <TextField size=\"small\" fullWidth {...params} />}\n                      />\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        15. Enter the Softwares installed in your laptop.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. Teams, Skype, Toad, SQL developer, Visual Studio Code .....\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder=\"Enter\"\n                        name=\"other_software_installed\"\n                        value={value.other_software_installed}\n                        onChange={handleChange}\n                      />\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        16. If you have any other conserns kindly mention here\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. My laptop screen is damaged...\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        id=\"id-outlined-multiline-static\"\n                        multiline\n                        rows={4}\n                        placeholder=\"Enter here\"\n                        name=\"remarks\"\n                        value={value.remarks}\n                        onChange={handleChange}\n                      />\n                    </Stack>\n                  </Stack>\n\n                  <Stack>\n                    <Stack>\n                      <Typography variant=\"subtitle1\" noWrap>\n                        17. Enter the windows product key of your laptop.\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                        Eg. Reach the HR team if you don't know your windows product key\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\">\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder=\"Enter\"\n                        name=\"windows_product_id\"\n                        value={value.windows_product_id}\n                        onChange={handleChange}\n                      />\n                    </Stack>\n                  </Stack>\n                </>\n              )}\n            </Stack>\n          </CardContent>\n          <CardActions>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              onClick={handleSubmit}\n              disabled={isLoading || value.focusr_laptop === ''}\n            >\n              {isLoading ? 'Submitting' : 'Submit'}\n            </Button>\n          </CardActions>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}