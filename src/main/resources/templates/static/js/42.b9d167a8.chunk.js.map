{"version":3,"sources":["components/HeaderBreadcrumbs.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","pages/timesheetsettings/kpi-kra-master-components/KpiKraMasterEdit.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","component","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","KpiKraMasterEdit","themeStretch","useSettings","title","enqueueSnackbar","useSnackbar","dispatch","useDispatch","id","useParams","isLoading","useSelector","getIsLoadingFromGroup","details","getkkmasterDetailsFromTimesheetSettings","find","_x","NewKpiKraSchema","Yup","shape","required","description","rating","max","min","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setSubmitting","updateKpiKraActionAsync","error","console","errors","touched","handleSubmit","isSubmitting","getFieldProps","maxWidth","PATH_DASHBOARD","general","timesheet","settings","kpiKraMaster","value","noValidate","autoComplete","spacing","fullWidth","label","Boolean","helperText","multiline","minRows","maxRows","type","size","loading"],"mappings":"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","file":"static/js/42.b9d167a8.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React from 'react';\r\nimport { Container, Stack, TextField } from '@mui/material';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { useParams } from 'react-router-dom';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\r\nimport useSettings from '../../../hooks/useSettings';\r\nimport Page from '../../../components/Page';\r\nimport {\r\n  updateKpiKraActionAsync,\r\n  getIsLoadingFromGroup,\r\n  getkkmasterDetailsFromTimesheetSettings\r\n} from '../../../redux/slices/timesheetSettingsSlice';\r\n\r\nexport default function KpiKraMasterEdit() {\r\n  const { themeStretch } = useSettings();\r\n  const title = 'KPI-KRA Master';\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const isLoading = useSelector(getIsLoadingFromGroup);\r\n  const kkMasterDetails = useSelector(getkkmasterDetailsFromTimesheetSettings);\r\n  const details = kkMasterDetails.find((_x) => _x.id === +id);\r\n  const NewKpiKraSchema = Yup.object().shape({\r\n    name: Yup.string().required('KPI Name is required'),\r\n    description: Yup.string(),\r\n    rating: Yup.number()\r\n      .required('Rating is required')\r\n      .max(100, 'Maximum number should be 100')\r\n      .min(1, 'Minimum nuber should be 1')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: details.name || '',\r\n      description: details.description || '',\r\n      rating: details.rating || ''\r\n    },\r\n    validationSchema: NewKpiKraSchema,\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      try {\r\n        dispatch(updateKpiKraActionAsync({ ...values, id: +id }));\r\n        setSubmitting(false);\r\n        enqueueSnackbar('Updated successfully', { variant: 'success' });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n  return (\r\n    <Page title={title}>\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={title}\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.general.root },\r\n            { name: 'Settings', href: PATH_DASHBOARD.timesheet.settings },\r\n            { name: 'KPI-KRA Master', href: PATH_DASHBOARD.timesheet.kpiKraMaster },\r\n            { name: 'Edit' }\r\n          ]}\r\n        />\r\n        <Card>\r\n          <CardContent>\r\n            <FormikProvider value={formik}>\r\n              <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <Stack spacing={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"KPI\"\r\n                    {...getFieldProps('name')}\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                  />\r\n\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    minRows={3}\r\n                    maxRows={5}\r\n                    label=\"Description\"\r\n                    {...getFieldProps('description')}\r\n                    error={Boolean(touched.description && errors.description)}\r\n                    helperText={touched.description && errors.description}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Rating\"\r\n                    type=\"number\"\r\n                    {...getFieldProps('rating')}\r\n                    error={Boolean(touched.rating && errors.rating)}\r\n                    helperText={touched.rating && errors.rating}\r\n                  />\r\n\r\n                  <LoadingButton\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    loading={isSubmitting || isLoading}\r\n                  >\r\n                    Save\r\n                  </LoadingButton>\r\n                </Stack>\r\n              </Form>\r\n            </FormikProvider>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}